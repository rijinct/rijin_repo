'''
Created on 13-May-2020

@author: rithomas
'''
exec(open("/opt/nsn/ngdb/ifw/lib/application/utils/application_definition.sh").read().replace("(", "(\"").replace(")", "\")"))

EXPLODE_COL_LIST = ['formula', 'readbylist','writtenbylist']
JOIN_COL_LIST = ['formula','writtenbylist']
UNIQ_COL_KEYLIST = ['tablename','columnname']
TECH_META_COL_LIST = ['tablename','table_description','columnname','level','definition','datatype','formula','sequence','readbylist','writtenbylist','jobidlist','interval','writtenbytabledescription']
TECH_META_DROP_COL_LIST = ['table_description_y','level_y','definition_y','datatype_y','formula_y','sequence_y','readbylist_y','writtenbylist_y','jobidlist_y','interval_y','_merge']
JOIN_CONDITION = 'inner'
TREE_HIERARCHY_LIST = ['table','row']
DB_URL = 'postgresql://{cemod_application_sdk_database_linux_user}:@{cemod_postgres_sdk_active_fip_host}:{cemod_application_sdk_db_port}/{cemod_sdk_db_name}'.format(cemod_application_sdk_database_linux_user=cemod_application_sdk_database_linux_user, cemod_postgres_sdk_active_fip_host=cemod_postgres_sdk_active_fip_host, cemod_application_sdk_db_port=cemod_application_sdk_db_port, cemod_sdk_db_name=cemod_sdk_db_name)
METADATA_COLUMN_NAMES = ['tablename', 'ultimateSoureTable_description','columnname']
XML_DF_UNIQUE_COLUMNS = ['tablename','table_description','columnname','level','definition', 'datatype', 'formula', 'jobidlist', 'interval']
READ_BY_LIST_METADATA_QUERY = """
select readByList, readByList as writtenByList,readByTableDescription,readByTableDescription as writtenByTableDescription from (select distinct(TableName) as readByList,table_description as readByTableDescription from ((select 'PS_'|| n2.specid || '_1_15MIN' as TableName,n2.description as table_description, ColumnName, 'PS' as level ,Definition,DataType,Formula,unik from (((select char_spec.name as ColumnName, char_spec.valuetype as DataType, char_spec.description as Definition,char_spec.derivationformula as Formula,perf_spec_attributes_use.sequence,perf_spec_attributes_use.perfspecid as perfspecid,(case when char_spec.unik='Unique' then 'PK' else '' end) as unik from sairepo.char_spec join sairepo.perf_spec_attributes_use on char_spec.id=perf_spec_attributes_use.charspecid  and (upper(char_spec.abstract)='DERIVED' or char_spec.abstract is null) and perf_spec_attributes_use.intervalid=5) 
union all 
(select perf_indi_spec.pi_spec_name as ColumnName,perf_indi_spec.valuetype as DataType,perf_indi_spec.description  as Definition,perf_indi_spec.derivationmethod as Formula,perf_spec_attributes_use.sequence as sequence,perf_spec_attributes_use.perfspecid as perfspecid,null from sairepo.perf_indi_spec  join sairepo.perf_spec_attributes_use on perf_indi_spec.id=perf_spec_attributes_use.perfindicatorspecid and (perf_spec_attributes_use.intervalid=5 and (istransient is null or istransient=false)) where perf_spec_attributes_use.perfspecid in (select u3.id from (select u1.specid as specid,u1.version as version,concat(u1.specid,'_',u1.version) as specid_version from (select specid,max(version) as version from sairepo.perf_spec group by specid)u1)u2 join (select id,specid,concat(specid,'_',version) as specid_version from sairepo.perf_spec)u3 on u2.specid_version=u3.specid_version)))n1 join sairepo.perf_spec n2 on n2.id=n1.perfspecid )order by perfspecid,sequence)
union all
(select 'PS_'|| n2.specid || '_1_HOUR' as TableName,n2.description as table_description,ColumnName , 'PS' as level, Definition,DataType,Formula,unik from (((select char_spec.name as ColumnName, char_spec.valuetype as DataType, char_spec.description as Definition,char_spec.derivationformula as Formula,perf_spec_attributes_use.sequence,perf_spec_attributes_use.perfspecid as perfspecid,(case when char_spec.unik='Unique' then 'PK' else '' end) as unik from sairepo.char_spec join sairepo.perf_spec_attributes_use on char_spec.id=perf_spec_attributes_use.charspecid  and (upper(char_spec.abstract)='DERIVED' or char_spec.abstract is null) and perf_spec_attributes_use.intervalid=1) 
union all 
(select perf_indi_spec.pi_spec_name as ColumnName,perf_indi_spec.valuetype as DataType,perf_indi_spec.description  as Definition,perf_indi_spec.derivationmethod as Formula,perf_spec_attributes_use.sequence as sequence,perf_spec_attributes_use.perfspecid as perfspecid,null from sairepo.perf_indi_spec  join sairepo.perf_spec_attributes_use on perf_indi_spec.id=perf_spec_attributes_use.perfindicatorspecid and (perf_spec_attributes_use.intervalid=1 and (istransient is null or istransient=false)) where perf_spec_attributes_use.perfspecid in (select u3.id from (select u1.specid as specid,u1.version as version,concat(u1.specid,'_',u1.version) as specid_version from (select specid,max(version) as version from sairepo.perf_spec group by specid)u1)u2 join (select id,specid,concat(specid,'_',version) as specid_version from sairepo.perf_spec)u3 on u2.specid_version=u3.specid_version)))n1 join sairepo.perf_spec n2 on n2.id=n1.perfspecid )order by perfspecid,sequence)
union all
(select 'PS_'|| n2.specid || '_1_DAY' as TableName,n2.description as table_description,ColumnName , 'PS' as level, Definition,DataType,Formula,unik from (((select char_spec.name as ColumnName, char_spec.valuetype as DataType, char_spec.description as Definition,char_spec.derivationformula as Formula,perf_spec_attributes_use.sequence,perf_spec_attributes_use.perfspecid as perfspecid,(case when char_spec.unik='Unique' then 'PK' else '' end) as unik from sairepo.char_spec join sairepo.perf_spec_attributes_use on char_spec.id=perf_spec_attributes_use.charspecid  and (upper(char_spec.abstract)='DERIVED' or char_spec.abstract is null) and perf_spec_attributes_use.intervalid=2) 
union all 
(select perf_indi_spec.pi_spec_name as ColumnName,perf_indi_spec.valuetype as DataType,perf_indi_spec.description  as Definition,perf_indi_spec.derivationmethod as Formula,perf_spec_attributes_use.sequence as sequence,perf_spec_attributes_use.perfspecid as perfspecid,null from sairepo.perf_indi_spec  join sairepo.perf_spec_attributes_use on perf_indi_spec.id=perf_spec_attributes_use.perfindicatorspecid and (perf_spec_attributes_use.intervalid=2 and (istransient is null or istransient=false)) where perf_spec_attributes_use.perfspecid in (select u3.id from (select u1.specid as specid,u1.version as version,concat(u1.specid,'_',u1.version) as specid_version from (select specid,max(version) as version from sairepo.perf_spec group by specid)u1)u2 join (select id,specid,concat(specid,'_',version) as specid_version from sairepo.perf_spec)u3 on u2.specid_version=u3.specid_version)))n1 join sairepo.perf_spec n2 on n2.id=n1.perfspecid )order by perfspecid,sequence)
union all
(select 'PS_'|| n2.specid || '_1_WEEK' as TableName,n2.description as table_description, ColumnName, 'PS' as level ,Definition,DataType,Formula,unik from (((select char_spec.name as ColumnName, char_spec.valuetype as DataType, char_spec.description as Definition,char_spec.derivationformula as Formula,perf_spec_attributes_use.sequence,perf_spec_attributes_use.perfspecid as perfspecid,(case when char_spec.unik='Unique' then 'PK' else '' end) as unik from sairepo.char_spec join sairepo.perf_spec_attributes_use on char_spec.id=perf_spec_attributes_use.charspecid  and (upper(char_spec.abstract)='DERIVED' or char_spec.abstract is null) and perf_spec_attributes_use.intervalid=3) 
union all 
(select perf_indi_spec.pi_spec_name as ColumnName,perf_indi_spec.valuetype as DataType,perf_indi_spec.description  as Definition,perf_indi_spec.derivationmethod as Formula,perf_spec_attributes_use.sequence as sequence,perf_spec_attributes_use.perfspecid as perfspecid,null from sairepo.perf_indi_spec  join sairepo.perf_spec_attributes_use on perf_indi_spec.id=perf_spec_attributes_use.perfindicatorspecid and (perf_spec_attributes_use.intervalid=3 and (istransient is null or istransient=false)) where perf_spec_attributes_use.perfspecid in (select u3.id from (select u1.specid as specid,u1.version as version,concat(u1.specid,'_',u1.version) as specid_version from (select specid,max(version) as version from sairepo.perf_spec group by specid)u1)u2 join (select id,specid,concat(specid,'_',version) as specid_version from sairepo.perf_spec)u3 on u2.specid_version=u3.specid_version)))n1 join sairepo.perf_spec n2 on n2.id=n1.perfspecid )order by perfspecid,sequence)
union all
(select 'PS_'|| n2.specid || '_1_MONTH' as TableName,n2.description as table_description,ColumnName,'PS' as level ,Definition,DataType,Formula,unik from (((select char_spec.name as ColumnName, char_spec.valuetype as DataType, char_spec.description as Definition,char_spec.derivationformula as Formula,perf_spec_attributes_use.sequence,perf_spec_attributes_use.perfspecid as perfspecid,(case when char_spec.unik='Unique' then 'PK' else '' end) as unik from sairepo.char_spec join sairepo.perf_spec_attributes_use on char_spec.id=perf_spec_attributes_use.charspecid  and (upper(char_spec.abstract)='DERIVED' or char_spec.abstract is null) and perf_spec_attributes_use.intervalid=4) 
union all 
(select perf_indi_spec.pi_spec_name as ColumnName,perf_indi_spec.valuetype as DataType,perf_indi_spec.description  as Definition,perf_indi_spec.derivationmethod as Formula,perf_spec_attributes_use.sequence as sequence,perf_spec_attributes_use.perfspecid as perfspecid,null from sairepo.perf_indi_spec  join sairepo.perf_spec_attributes_use on perf_indi_spec.id=perf_spec_attributes_use.perfindicatorspecid and (perf_spec_attributes_use.intervalid=4 and (istransient is null or istransient=false)) where perf_spec_attributes_use.perfspecid in (select u3.id from (select u1.specid as specid,u1.version as version,concat(u1.specid,'_',u1.version) as specid_version from (select specid,max(version) as version from sairepo.perf_spec group by specid)u1)u2 join (select id,specid,concat(specid,'_',version) as specid_version from sairepo.perf_spec)u3 on u2.specid_version=u3.specid_version)))n1 join sairepo.perf_spec n2 on n2.id=n1.perfspecid )order by perfspecid,sequence)
union all 
(select TableName,table_description,ColumnName,'US' as level,Definition,Datatype,Formula,unik from (select 'US_' || n1.specid|| '_1' as TableName,n1.description as table_description,n2.name as ColumnName,n2.valuetype as Datatype,n2.description as Definition, n2.derivationformula as Formula,n2.unik as unik from ((select id,specid,description from sairepo.usage_spec)n1 join (select usage_spec_char_use.usagespecid as usagespecid,usage_spec_char_use.sequence as sequence,char_spec.name,char_spec.description,char_spec.valuetype, char_spec.valuetypeprecision, char_spec.derivationformula,(case when char_spec.unik='Unique' then 'PK' else '' end) as unik from sairepo.char_spec join sairepo.usage_spec_char_use on char_spec.id=usage_spec_char_use.usagespeccharid where usage_spec_char_use.usagespecid in  (select u3.id from (select u1.specid as specid,u1.version as version,concat(u1.specid,'_',u1.version) as specid_version from (select specid,max(version) as version from sairepo.usage_spec where abstract='DERIVED'  or abstract is null group by specid)u1)u2 
join (select id,specid,concat(specid,'_',version) as specid_version from sairepo.usage_spec)u3 on u2.specid_version=u3.specid_version) and (upper(char_spec.abstract)='DERIVED' or char_spec.abstract is null)) n2 on n1.id=n2.usagespecid) order by n2.usagespecid,n2.sequence)n3))o1)o2
"""
WRITTEN_BY_LIST_METADATA_QUERY = """
select m1.TableName as writtenbylist,m1.table_description as writtenBytableDescription,m1.ColumnName as formula from ((select TableName,table_description,ColumnName,'US' as level,Definition,Datatype,Formula,unik from (select 'US_' || n1.specid|| '_1' as TableName,n1.description as table_description,n2.name as ColumnName,n2.valuetype as Datatype,n2.description as Definition, n2.derivationformula as Formula,n2.unik as unik from ((select id,specid,description from sairepo.usage_spec)n1 join (select usage_spec_char_use.usagespecid as usagespecid,usage_spec_char_use.sequence as sequence,char_spec.name,char_spec.description,char_spec.valuetype, char_spec.valuetypeprecision, char_spec.derivationformula,(case when char_spec.unik='Unique' then 'PK' else '' end) as unik from sairepo.char_spec join sairepo.usage_spec_char_use on char_spec.id=usage_spec_char_use.usagespeccharid where usage_spec_char_use.usagespecid in  (select u3.id from (select u1.specid as specid,u1.version as version,concat(u1.specid,'_',u1.version) as specid_version from (select specid,max(version) as version from sairepo.usage_spec where abstract='DERIVED'  or abstract is null group by specid)u1)u2 
join (select id,specid,concat(specid,'_',version) as specid_version from sairepo.usage_spec)u3 on u2.specid_version=u3.specid_version) and (upper(char_spec.abstract)='DERIVED' or char_spec.abstract is null)) n2 on n1.id=n2.usagespecid) order by n2.usagespecid,n2.sequence)n3)
union all 
(select TableName,table_description,ColumnName,'INT' as level,Definition,Datatype,Formula,unik from (select 'INT_' || n1.specid|| '_1' as TableName,n1.description as table_description,n2.name as ColumnName,n2.valuetype as Datatype,n2.description as Definition, n2.derivationformula as Formula,n2.unik as unik from ((select id,specid,description from sairepo.usage_spec)n1 join (select usage_spec_char_use.usagespecid as usagespecid,usage_spec_char_use.sequence as sequence,char_spec.name,char_spec.description,char_spec.valuetype, char_spec.valuetypeprecision, char_spec.derivationformula,(case when char_spec.unik='Unique' then 'PK' else '' end) as unik from sairepo.char_spec join sairepo.usage_spec_char_use on char_spec.id=usage_spec_char_use.usagespeccharid where usage_spec_char_use.usagespecid in  (select u3.id from (select u1.specid as specid,u1.version as version,concat(u1.specid,'_',u1.version) as specid_version from (select specid,max(version) as version from sairepo.usage_spec where abstract='DERIVED'  or abstract is null group by specid)u1)u2 
join (select id,specid,concat(specid,'_',version) as specid_version from sairepo.usage_spec)u3 on u2.specid_version=u3.specid_version) and (upper(char_spec.abstract)='DERIVED' or char_spec.abstract is null)) n2 on n1.id=n2.usagespecid) order by n2.usagespecid,n2.sequence)n3))m1
"""
ADAPTATION_TOPOLOGY_MAPPING_QUERY = "select concat('',us.specid,'_1') , concat('',us1.specid,'_1')  from sairepo.usage_spec_rel rel_table join sairepo.usage_spec us on rel_table.virtualspec=us.id join sairepo.usage_spec us1 on rel_table.transientspec=us1.id;"
ES_TABLE_QUERY = """
select distinct('ES_' || specid|| '_1') as tablename  from sairepo.entity_spec
"""
