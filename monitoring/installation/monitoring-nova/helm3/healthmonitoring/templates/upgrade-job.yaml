apiVersion: batch/v1
kind: Job
metadata:
   name: {{ template "healthmonitoring.fullname" . }}-upgrade-job
   labels:
    app: {{ template "healthmonitoring.fullname" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
   annotations:
    "helm.sh/hook": pre-upgrade,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 3
  template:
    metadata:
      labels:
        helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    spec:
      restartPolicy: Never
      containers:
      - name: pre-upgrade-admin
        image: "{{ .Values.global.registry }}/{{ .Values.imageKubectl.name }}:{{ .Values.imageKubectl.tag }}" 
        imagePullPolicy: {{ .Values.imageKubectl.pullPolicy }}
        resources:
          requests:
            cpu: "0.05"
            memory: "5Mi"
          limits:
            cpu: "0.1"
            memory: "50Mi"
        command:
          - sh
          - "-c"
          - |
            current_version=`kubectl describe deployment {{ template "healthmonitoring.fullname" . }} -n {{ .Release.Namespace }} | grep -i chart | awk -F"=" '{ print $2 }'`
            pod_name=`kubectl get pods -n {{ .Release.Namespace }} |grep {{ template "healthmonitoring.fullname" . }}|tr -d [:space:]|awk -F"[0-9]/[0-9]" '{print $1}'`
            echo $pod_name
            backup_path={{ .Values.app.backupPath }}/$current_version
            echo $backup_path
            kubectl exec -it $pod_name -n {{ .Release.Namespace }} -c healthmonitoring sh <<< "mkdir -p $backup_path"
            echo "Starting pre-upgrade job" $pod_name
            kubectl exec -it $pod_name -n {{ .Release.Namespace }} -c healthmonitoring sh <<< "cp {{ .Values.app.monitoringSettingsConfDir }}/monitoring.xml $backup_path"
            echo "Finished pre-upgrade job"
