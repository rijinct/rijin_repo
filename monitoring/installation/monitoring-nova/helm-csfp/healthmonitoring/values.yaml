# Default values for healthmonitoring.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  registry: csf-docker-delivered.repo.lab.pl.alcatel-lucent.com  
  registry1: registry1-docker-io.repo.lab.pl.alcatel-lucent.com
  registry3: cemod-docker-candidates.repo.lab.pl.alcatel-lucent.com
  registry4: cemod-docker-releases.repo.lab.pl.alcatel-lucent.com
  is_nodeaffinity_enabled: false

image:
  repository: healthmonitoring
  tag: "${project_helm_version}"
  pullPolicy: IfNotPresent

imageKubectl:
  name: tools/kubectl
  tag: v1.12.3
  pullPolicy: IfNotPresent
  
replicaCount: 1

httpPort: 8080

service:
  type: ClusterIP
  port: 8080

app:
  hadoopConfDir: "/etc/hadoop/conf"
  hadoopConfigMap: "acp-cdlk-access-cdlk-hdfs"
  hiveConfDir: "/etc/hive/conf"
  hiveConfigMap: "acp-cdlk-access-cdlk-hive"
  hiveConfigMapAccess: "acp-cdlk-access-cdlk-access"
  cdlkConfigMapAccessContext: "acp-cdlk-access-context"
  extEndpointDir: "/opt/nsn/ngdb/monitoring/extEndPointsConfigMap"
  sdkDBUserName: "sairepo"
  sdkDBDriver: "org.postgresql.Driver"
  sdkSchemaName: "sairepo"
  apaasContextConfigMap: "apaas-context"
  monitoringSettingsConfDir: "/monitoring/conf"
  mointoringAlarmsDir: "/monitoring/alarms"
  mointoringCadPropDir: "/monitoring/cad"
  backupPath: "/mnt/staging/backup/healthmonitoring"
  accessPath: "/mnt/staging/healthmonitoring/kubectl"
  appaskafkaConfigMap: "acp-ckaf-kafka-context"
  configMap:
    extEndpoints:
      name: "ca4ci-ext-endpoints"
  secret:
    vault: 
      name: "ca4ci-vault-token-secrets"

is_elasticsearch_enabled: false

application:
  environment: "production"
  tier: "backend"

k8:
  enabled: true

hiveConfigProperties:
  db_driver: org.apache.hive.jdbc.HiveDriver
  hive_username: hdfs
  connection_pooling_enabled: false
  min_connections: 40
  max_connections: 50
  IDLE_CONNECTION_TEST_PERIOD_IN_MINUTES: 2
  IDLE_CONNECTION_TEST_SQL: select * from tab limit 5
  test_connection: true

volumegfs:
  name: glusterca4ci
  mountpath: /mnt

glusterfs:
  endpoints: ca4ci-glusterfs
  path: mnt_volume

database:
  enabled: true
  schemaName: cemod

prometheus:
  enabled: false

resources: 
  requests:
    cpu: 0.5
    memory: 2Gi
  limits:
    cpu: 5
    memory: 4Gi
mariadbwaitJob:
  resources:
    requests:
      cpu: 0.05
      memory: 5Mi
    limits:
      cpu: 0.1
      memory: 20Mi
krb:
  requests:
    cpu: 0.05
    memory: 5Mi
  limits:
    cpu: 0.1
    memory: 50Mi

rbac:
  enabled: true
  # create set 'true' will create ServiceAccount, Role and RoleBinding.
  # It should be created once per namespace
  create: true
  #serviceAccount: fullname
cdlk:
  enabled: true

mariadbConfigProperties:
  mariaDbDriver: "org.mariadb.jdbc.Driver"
  domainName: "svc.cluster.local"

queryschedulerConfigProperties:
  schemaName: "saiws"
  qsServiceName: "queryscheduler-queryscheduler-cmdb-mysql"
  qsNameOverride: "queryscheduler-cmdb-secrets"
  port: 3306
  username: root
  mdbScreteKey: mysql-root-password

webserviceConfigProperties:
  schemaName: "saiws"
  wsNameOverride: "webservice-cmdb-secrets"
  wsServiceName: "webservice-webservice-cmdb-mysql"
  port: 3306
  username: root
  mdbScreteKey: mysql-root-password

monitoringMariaDbConfigProperties:
  monitoringServiceName: "healthmonitoring-healthmonitoring-cmdb-mysql"
  port: 3306
  schemaName: "monitoring"
  username: "root"
  
apiaggregator:
  name: apiaggregator
  port: 8080

securityContext:
  enabled: true
  fsGroup: 1007
  runAsUser: 1002
  runAsGroup: 1007
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false

is_kerberos_enabled: true

realm: NOKIA.COM

services:
  mysql:
    port: 3306

#------------------------------------------------------------------------------
# CMDB values (only used if enabled: true)
#------------------------------------------------------------------------------
cmdb:
  # If cmdb is enabled, a sample cmdb database will get deployed
  enabled: true
  cbur:
    enabled: true
    autoEnableCron: true
    backendMode: local
    cronSpec: "0 0 * * *"
    maxiCopy: 3
  nameOverride: monitoring-cmdb
  admin:
    hook_delete_policy: before-hook-creation,hook-succeeded
  ## Cluster Type is one of master-slave, master-master, galera, simplex
  cluster_type: simplex
  cluster_name: "healthmonitoringmariadb"
  mariadb:
   # if cmdb.enabled, make sure that MYSQL_DATABASE is the same as dbName above!
    root_password: VGVzdEAxMjM=
    ## The number of MariaDB pods to create
    count: 1
    allow_root_all: true
# if cmdb.enabled, make sure that MYSQL_DATABASE is the same as dbName above!
    databases:
      - name: monitoring

    users:
      - name: monitoring
        password: VGVzdEAxMjM=
        host: ""
        privilege: "ALL PRIVILEGES"
        object: "monitoring.*"
    repl_user: monitoring
    repl_user_password: VGVzdEAxMjM=
    persistence:
      enabled: True
      accessMode: ReadWriteOnce
      size: 20Gi
      resourcePolicy: keep

    audit_logging:
      enabled: true
      events: "CONNECT,QUERY_DCL,QUERY_DDL"

persistence:
  storageClass: glusterfs-storageclass
  accessMode: ReadWriteOnce
  size: 1Gi
  outputMountPath: /opt/nsn/ngdb/monitoring/output/

kadmin:
 image:
   name: "kerberos-kadmin"
   tag: "20.10.696-10"
   pullPolicy: "IfNotPresent"

kinit:
 image:
   name: "kerberos-kinit"
   tag: "20.10.696-10"
   pullPolicy: "IfNotPresent"
 cron:
   expression: "00 11,23 * * *"

krb5:
# The default os user that will be used to build the principal "<os_user>/<hostname>@<default_realm>"
  os_user: "ngdb"
# The name of the configmap that provides krb5.conf file
  configmap: "acp-apaas-manager-krb5-config"

kerberos:
 krb5ConfigVolumeMountPath: "/etc/krb5.conf"
 sharedDataMountPath: "/tmp/krb5-credentials"

timezone:
  enabled: true
  localtimezone: UTC

cdlk:
  enabled: true
  tls:
    enabled: true
    cert_path: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.242.b08-0.el7_7.x86_64/jre/lib/security/
    secret_name: ca4ci-jsscert-secrets
