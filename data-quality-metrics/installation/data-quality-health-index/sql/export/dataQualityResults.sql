COPY (select xmlelement(name "dataQualityResult",(select xmlelement(name "resultList",(select XMLAGG(XMLELEMENT(name result, xmlforest(p.schemaname as "schemaName",databasetype as "databaseType",table_id as "tableID", upper(table_name) as "tableName", column_id as "fieldID",upper(column_name) as "fieldName",ruleid as "ruleID",rule_presentation_name as "ruleName",rule_description as "ruleDescription", initcap(dimension) as "typeID",objecttype as "objectType", column_datatype as "supportDataType",trunc(threshold) as threshold, total_row_count as "totalRecord", bad_record_count as "badRecord", score as "score", check_pass as "isCheckPass",datatime as "dataTime",starttime as "startTime",endtime as "endTime"))) from (select 'PROJECT' as "schemaname",'BIGDATA' as databasetype, c.table_id, c.table_name, c.column_id,c.column_name,b.ruleid,a.rule_presentation_name,case when b.rule_parameter='NONE' then a.rule_description when b.dimension = 'CONSISTENCY' or b.dimension = 'INTEGRITY' then concat(a.rule_description, ' ', '-', '[', b.rule_parameter, ']') else a.rule_description end as rule_description,b.dimension,'field' as "objecttype", c.column_datatype,b.threshold, b.total_row_count, b.bad_record_count, b.score, b.check_pass,to_char(c.computed_date,'yyyyMMdd') as "datatime", to_char(b.start_time,'yyyy/MM/dd HH24:MI:SS') as "starttime",to_char(b.end_time,'yyyy/MM/dd HH24:MI:SS') as "endtime" from dq_rules_definition a JOIN dq_fields_score b ON a.rule_id=b.ruleid AND b.source in ('CEM') JOIN (select * from dq_fields_definition where id in (select max(id) from dq_fields_definition where computed_date='DATA_DATE' group by table_name,column_name)) c ON b.field_def_id=c.id)p))q))) TO STDOUT